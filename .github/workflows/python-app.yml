name: Discord Bot CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install appbuilder-sdk qianfan nest_asyncio discord.py redis

    - name: Set environment variables
      env:
        QIANFAN_ACCESS_KEY: ${{ secrets.QIANFAN_ACCESS_KEY }}
        QIANFAN_SECRET_KEY: ${{ secrets.QIANFAN_SECRET_KEY }}
        APPBUILDER_TOKEN: ${{ secrets.APPBUILDER_TOKEN }}
        REVIEW_APP_ID: ${{ secrets.REVIEW_APP_ID }}
        CHAT_APP_ID: ${{ secrets.CHAT_APP_ID }}
      run: echo "Environment variables set."

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install appbuilder-sdk qianfan nest_asyncio discord.py redis

    - name: Deploy to Production Server via SSH
      uses: appleboy/ssh-action@v0.1.2
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          cd /path/to/your/app
          git pull origin main
          docker-compose down && docker-compose up -d

    - name: Notify Success
      if: success()
      run: echo "Deployment successful!"
